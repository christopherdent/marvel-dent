{"version":3,"sources":["components/Nav.js","components/Tile.js","components/Heading.js","components/Filter.js","components/Search.js","containers/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","Navbar","href","target","rel","src","height","id","alt","Tile","props","Card","image","title","creators","moreinfo","Heading","Filter","SearchBar","useState","class","type","placeholder","name","onChange","onClick","term","Main","e","setState","filter","value","fetchComics","state","configObj","headers","query","url","trackPromise","fetch","then","res","json","data","console","log","results","comics","handleCheckbox","this","filterList","map","comic","thumbnail","path","Col","sm","md","lg","extension","items","urls","Container","Search","Row","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingIndicator","usePromiseTracker","promiseInProgress","color","width","timeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e5e3a9b.chunk.js","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\n\nimport { Navbar } from 'react-bootstrap';\n\n\nfunction Nav() {\n   \n  return (    \n      <Navbar>\n        <a href = 'http://www.christopher-dent.com' target=\"_blank\" rel=\"noopener noreferrer\">\n        <img \n        src = \"https://cjdportfolio.s3.amazonaws.com/android-chrome-512x512.png\"\n        height = '40px'\n        \n        id = \"cjdlogo\"\n        />\n        </a> \n\n        <a href = 'http://www.marvel.com' target=\"_blank\" rel=\"noopener noreferrer\">\n        <img \n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Marvel_Logo.svg/2560px-Marvel_Logo.svg.png\"\n        id = \"mlogo\"\n        alt=\"logo\"     \n        height='100px'\n         />\n        </a> \n        <a href = 'http://www.christopher-dent.com' target=\"_blank\" rel=\"noopener noreferrer\">\n        <img \n        src = \"https://cjdportfolio.s3.amazonaws.com/android-chrome-512x512.png\"\n        height = '40px'\n        id = \"cjdlogo2\"\n        />\n        </a> \n\n        {' '}  \n\n      </Navbar>\n  );\n}\n\nexport default Nav;","/*eslint-disable*/\n\nimport React from \"react\";\n\n// import Logo from \"../Logo.svg\";\nimport { Navbar, Container, Card } from 'react-bootstrap';\nimport { propTypes } from \"react-bootstrap/esm/Image\";\n\n\nfunction Tile(props) {\n  \n\n  \n  return (\n         <>\n          <Card id=\"air-tiles\">          \n             <img src =  {props.image} />\n              <div id = \"info-box\">\n              <span> {props.title} </span>\n              <ul id = \"hover-box\">\n                {/* <p>{props.title}</p> */}\n                <li>{props.creators}</li>\n                <li><a href = {props.moreinfo} target=\"_blank\" rel=\"noopener noreferrer\">More Info</a></li>\n                <li><a href = { ` http://www.google.com/search?tbm=shop&q=${props.title} ` } target=\"_blank\" rel=\"noopener noreferrer\">Check Prices / Buy</a></li>\n               </ul>\n            </div>\n         </Card>\n      </>\n  );\n}\n\nexport default Tile;","/*eslint-disable*/\n\nimport React from \"react\";\n\n \nimport { Navbar, Container } from 'react-bootstrap';\n\nfunction Heading() {\n   \n\n \n  return (\n  \n<>\n\n<h1>Comic Collection</h1>\n<br/>\n<p>Filter?</p>\n</>\n       \n  );\n}\n\nexport default Heading;","/*eslint-disable*/\n\nimport React from \"react\";\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n\nfunction Filter(props) {\n   \n  \n  return (\n  \n<>\n\n   \n<Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\" id=\"inputs\" className=\"alliance-list\">\n\n        <Form.Check             \n          type=\"radio\" \n          label=\"All\" \n          id= \"All\" \n          \n          value=\"All\"\n          defaultChecked = {false}\n          name= 'animals'\n         />\n          \n        <Form.Check             \n          type=\"radio\" \n          label=\"Squirells\" \n          id= \"squirell\" \n          onClick={props.handleCheckbox}\n          value=\"Squirells\"\n          defaultChecked = {false}\n          name= 'animals'\n         />\n          \n          <Form.Check \n          type=\"radio\" \n          label=\"Cats\" \n          id = \"cats\"  \n          onClick={props.handleCheckbox}\n          value=\"cats\"\n          defaultChecked = {false}\n          name= 'animals'\n          />\n         \n          <Form.Check \n          type=\"radio\" \n          label=\"Dragons\" \n          id = \"Dragons\"  \n          onClick={props.handleCheckbox}\n          value=\"dragons\"\n          defaultChecked = {false}\n          name= 'animals'\n          />\n      </Form.Group>\n  </>\n    \n  );\n}\n\nexport default Filter;","import React, { useState } from \"react\";\n\n\nfunction SearchBar(props) {\nconst [term, setTerm] = useState(\"\")\n  return (\n\n<div class = 'searchArea' >\n    <input\n            type=\"text\"\n            id=\"header-search\"\n            placeholder=\"Enter title\"\n            name=\"s\" \n            onChange=  {props.onChange} \n        />\n        <br />  \n\n        <button\n        type=\"button\" \n        class=\"btn btn-danger\"\n        onClick={props.onClick}\n        > Search Marvel for {props.term}\n        </button>\n        <br />  \n        </div>\n );\n  };\n\nexport default SearchBar;","/*eslint-disable*/\n\nimport React, { useState, useEffect } from 'react'\nimport Tile from '../components/Tile'\nimport Heading from '../components/Heading'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport Filter from '../components/Filter';\nimport SearchBar from '../components/Search';\nimport { trackPromise } from 'react-promise-tracker';\nimport Loader from \"react-loader-spinner\";\n\n\n\nclass Main extends React.Component {\n\n  constructor() {\n    super();    \n    this.state = {\n      comics: [],\n      filter : null\n    \n      \n  }\n} \n\n   \n\n\n\n   onChange = (e) => {\n         \nthis.setState({\n  filter: e.target.value\n  })\n }\n\n onClick = () => {\n     \n   this.fetchComics(`&titleStartsWith=${this.state.filter}`)\n\n }\n\n    configObj = {\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n  \n   \n    fetchComics = (query) => {\n\n      const publicKey = '8ba20045db37b24d33e34f26c4be8257'\n      const hash = '4c2e71d472bde5cbb7bc4a17eac68621'        \n      const url = `https://gateway.marvel.com/v1/public/comics?ts=1&apikey=${publicKey}&hash=${hash}&limit=100` + query;\n\n      trackPromise(\n         \n      fetch(url, this.configObj)\n          .then(res => res.json())\n      .then(({data}) => {\n        console.log(data.results)        \n        this.setState({ comics : data.results })\n      })\n    )\n  }\n\n\n\n    componentDidMount(){\n      this.fetchComics()\n       \n    }\n\n    handleCheckbox = e => {\n      if (e.target.value === \"All\") this.setState({ filter: \"none\" });\n      else this.setState({ filter: e.target.value });\n    };\n    \n\n  \n  \n  render(){   \n      \n \n \n      const filterList = this.state.comics.map(comic => {  \n          \n    \n        \n        \n        if (comic.thumbnail.path !== 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available')\n        return (  \n          <Col sm={6} md={4} lg={4}>\n           <Tile \n            key = {comic.id}      \n            title = {comic.title}       \n            image = { comic.thumbnail.path + \".\" + comic.thumbnail.extension }\n            creators = { comic.creators.items[0] ? comic.creators.items[0].name + \" et al.\" : null }\n            moreinfo = { comic.urls[0].url}\n    \n          \n            />\n         </Col>         \n        );\n\n\n  \n        }\n        \n      )\n  \n\n    \n  return ( \n   \n    <>    \n        <Container>\n\n          <SearchBar\n          onChange = {this.onChange}\n          onClick = {this.onClick}  \n          term = {this.state.filter}\n          /> \n       \n\n        <Row>\n\n         {filterList}\n        </Row>\n      </Container>\n    </>\n    );\n  }\n}\nexport default Main;","import React from 'react' \n\n//core containers\nimport Nav from './components/Nav'\nimport Main from \"./containers/Main\";\n \n \n\nclass App extends React.Component {\n render() {\n  return (\n    <div>\n      <Nav />\n      <Main/>\n    </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from \"react-loader-spinner\";\n\n\n//Vanilla Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst LoadingIndicator = props => {\n  const { promiseInProgress } = usePromiseTracker();\n\n   return (\n    promiseInProgress && \n    <Loader\n    type=\"Puff\"\n    color=\"#00BFFF\"\n    height={300}\n    width={300}\n    timeout={5000} //3 secs\n    id='loader'\n  />\n  );  \n }\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <LoadingIndicator/>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}